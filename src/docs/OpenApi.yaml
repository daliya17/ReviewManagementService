openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /reviews:
    post:
      tags:
        - review-controller
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
  /reviews/{reviewId}/unlike:
    patch:
      tags:
        - review-controller
      operationId: unlikeReview
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
  /reviews/{reviewId}/like:
    patch:
      tags:
        - review-controller
      operationId: likeReview
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
  /reviews/{id}:
    get:
      tags:
        - review-controller
      operationId: getReview
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
    delete:
      tags:
        - review-controller
      operationId: deleteReview
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
    patch:
      tags:
        - review-controller
      operationId: updateReview
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Review'
  /reviews/getAllReviews/{serviceId}:
    get:
      tags:
        - review-controller
      operationId: getAllReviews
      parameters:
        - name: serviceId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
components:
  schemas:
    CreateReviewRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        serviceName:
          type: string
        serviceId:
          type: integer
          format: int64
        rating:
          type: integer
          format: int32
        comment:
          type: string
    Review:
      type: object
      properties:
        id:
          type: string
        userId:
          type: integer
          format: int64
        serviceName:
          type: string
        serviceId:
          type: integer
          format: int64
        rating:
          type: integer
          format: int32
        comment:
          type: string
        likes:
          type: integer
          format: int32
        likedByUserIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        userName:
          type: string
        id:
          type: integer
          format: int64
